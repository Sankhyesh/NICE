```


docker rm -f `docker ps -qa`
  258  clear
  259  docker ps
  260  docker run -dit --name c1 -v /app:/ramandir centos:7
  261  docker ps
  262  cd /var/lib
  263  ls
  264  cd docker
  265  ls
  266  cd volumes
  267  ls
  268  cd /
  269  clear
  270  ls
  271  docker ps
  272  docker exec -it c1 ls
  273  docker exec -it c1 ls /ramandir
  274  docker exec -it c1 ls touch /ramandir/hostfile
  275  docker exec -it c1 touch /ramandir/hostfile
  276  docker exec -it c1 ls /ramandir
  277  docker exec -it c1
  278  docker exec -it c1 /bin/bash
  279  docker ps
  280  ls
  281  cd app/
  282  ls
  283  cat hostfile
  284  docker rm -f c1
  285  docker ps -a
  286  ls
  287  cat hostfile



```

```
docker logs c1
  313  cd /var/lib/docker/
  314  ls
  315  cd volumes/
  316  ls
  317  cd ..ls
  318  cd ..
  319  ls
  320  cd image/
  321  ls
  322  cd overlay2/
  323  ls
  324  cat repositories.json
  325  clear
  326  cd ~
  327  ls
  328  docker stats
  329  docker top c5
  330  ps -ef | grep 10091
  331  clear
  332  docker system df
  333  docker system -h
  334  system prune
  335  docker system prune
  336  docker system df
  337  docker system prune -a
  338  docker system df

```

```
 docker ps
  371  docker images
  372  docker run -dit --name mycon mycustomimage:v1
  373  docker ps
  374  docker attach mycon
  375  docker images
  376  clear
  377  docker ps
  378  docker images
  379  docker ps -a
  380  docker start mycon
  381  docker attach mycon
  382  docker start mycon
  383  docker commit -m "added one directory" -a "raman" c1 mycustomimage:v2
  384  docker commit -m "added one directory" -a "raman" mycon mycustomimage:v2
  385  docker images
  386  docker run -dit --name c3 mycustomimage:v2
  387  docker ps
  388  docker attach c3

```

  372  docker run -dit --name mycon mycustomimage:v1
  394    373  docker ps
  395    374  docker attach mycon
  396    375  docker images
  397    376  clear
  398    377  docker ps
  399    378  docker images
  400    379  docker ps -a
  401    380  docker start mycon
  402    381  docker attach mycon
  403    382  docker start mycon
  404    383  docker commit -m "added one directory" -a "raman" c1 mycustomimage:v2
  405    384  docker commit -m "added one directory" -a "raman" mycon mycustomimage:v2
  406    385  docker images
  407    386  docker run -dit --name c3 mycustomimage:v2
  408    387  docker ps
  409    388  docker attach c3
  410  clear
  411  docker ps
  412  docker images
  413  ls
  414  mkdir app
  415  cd app/
  416  ls
  417  vi Dockerfile
  418  ls
  419  cat Dockerfile
  420  clear
  421  docker rm -f `docker ps -aq`
  422  docker rmi -f `docker images`
  423  clear
  424  docker ps
  425  docker images
  426  ls
  427  cat Dockerfile
  428  ls
  429  docker build -t ramanapp:v1 .
  430  docker images
  431  docker run -dit --name c5 httpd ls
  432  docker ps -a
  433  docker run -dit --name c5 httpd
  434  docker run -dit --name c6 httpd
  435  docker ps
  436  docker exec -it c6 /bin/bash




FROM centos:7
RUN yum update -y
RUN yum -y install httpd





FROM centos:7
MAINTAINER  Raman Khanna raman.khanna@TechLanders.com
RUN mkdir /data
RUN yum update -y
RUN yum -y install httpd   php
RUN echo " TechLanders Solutions Deals in DevOps and Cloud" > /var/www/html/index.html
EXPOSE 80
VOLUME  /data
RUN echo "httpd" >> /root/.bashrc
CMD ["/bin/bash"]


```

```
 docker login
  444  clear
  445  docker images
  446  docker push ramanapp:v1
  447  docker tag 611f0476e8f4 ramann123/myimage:version1
  448  docker images
  449  docker push ramann123/myimage:version1
  450  docker rmi -f `docker images`
  451  clear
  452  docker ps
  453  docker rm -f `docker ps -aq`
  454  docker rmi -f `docker images`
  455  clear
  456  docker images
  457  docker pull ramann123/myimage:version1
  458  docker images

```

```


sudo yum install -y yum-utils
  509  sudo yum-config-manager --add-repo https://rpm.releases.hashicorp.com/RHEL/hashicorp.repo
  510  sudo yum -y install terraform
  511  terraform -v
  512  history
  513  clear
  514  aws configure
  515  yum install -y unzip
  516  yum install -y wget
  517  curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
  518  unzip awscliv2.zip
  519  sudo ./aws/install
  520  ln -s  /usr/local/bin/aws  /usr/bin/
  521  clear
  522  terraform -v
  523  aws
  524  aws help
  525  aws s3 ls
  526  aws configure
  527  aws s3 ls
  528  clear
  529  ls'
  530  clear
  531  ls
  532  mkdir terraform
  533  cd terraform/
  534  ls
  535  vi server.tf
  536  cat server.tf
  537  pwd
  538  ls -a
  539  terraform init
  540  ls -a
  541  cd .terraform
  542  ls
  543  cd providers/
  544  ls
  545  cd registry.terraform.io/
  546  ls
  547  cd hashicorp/
  548  ls
  549  cd aws/
  550  ls
  551  cd 5.0.1/
  552  ls
  553  cd linux_amd64/
  554  ls
  555  cd ~
  556  ls
  557  cd terraform/
  558  ls
  559  ls -a
  560  terraform validate
  561  terraform plan
  562  terraform apply
  563  terraform destroy
  564  history






[root@nice terraform]# cat server.tf
provider "aws" {
region="us-east-1"
}

resource "aws_instance" "ec2" {
  ami           = "ami-0bef6cc322bfff646"
  instance_type = "t2.micro"
  availability_zone="us-east-1c"
tags= {
Name="myfirstserver"
}
}





```

